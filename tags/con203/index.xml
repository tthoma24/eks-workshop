<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CON203 on Amazon EKS Workshop</title><link>/tags/con203/</link><description>Recent content in CON203 on Amazon EKS Workshop</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="/tags/con203/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction</title><link>/010_introduction/</link><pubDate>Wed, 03 Oct 2018 10:23:24 -0700</pubDate><guid>/010_introduction/</guid><description>Introduction to Kubernetes A walkthrough of basic Kubernetes concepts.
Welcome to the Amazon EKS Workshop!
The intent of this workshop is to educate users about the features of Amazon EKS.
Background in EKS, Kubernetes, Docker, and container workflows are not required, but they are recommended.
This chapter will introduce you to the basic workings of Kubernetes, laying the foundation for the hands-on portion of the workshop.
Specifically, we will walk you through the following topics:</description></item><item><title>Start the workshop...</title><link>/020_prerequisites/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/020_prerequisites/</guid><description>Getting Started To start the workshop, follow one of the following depending on whether you are&amp;hellip;
&amp;hellip;running the workshop on your own (in your own account), or &amp;hellip;attending an AWS hosted event (using AWS provided hashes) Once you have completed with either setup, continue with Create a Workspace</description></item><item><title>Launch using eksctl</title><link>/030_eksctl/</link><pubDate>Tue, 07 Aug 2018 13:36:57 -0700</pubDate><guid>/030_eksctl/</guid><description>Launch using eksctl eksctl is a tool jointly developed by AWS and Weaveworks that automates much of the experience of creating EKS clusters.
In this module, we will use eksctl to launch and configure our EKS cluster and nodes.</description></item><item><title>Deploy the Kubernetes Dashboard</title><link>/beginner/040_dashboard/</link><pubDate>Tue, 07 Aug 2018 08:30:11 -0700</pubDate><guid>/beginner/040_dashboard/</guid><description>Deploy the Kubernetes Dashboard In this Chapter, we will deploy the official Kubernetes dashboard, and connect through our Cloud9 Workspace.</description></item><item><title>Deploy the Example Microservices</title><link>/beginner/050_deploy/</link><pubDate>Tue, 18 Sep 2018 17:40:09 -0500</pubDate><guid>/beginner/050_deploy/</guid><description>Deploy the Example Microservices Deploy our Sample Applications Deploy NodeJS Backend API Deploy Crystal Backend API Let&amp;#39;s check Service Types Ensure the ELB Service Role exists Deploy Frontend Service Find the Service Address Scale the Backend Services Scale the Frontend Cleanup the applications</description></item><item><title>Helm</title><link>/beginner/060_helm/</link><pubDate>Tue, 07 Aug 2018 08:30:11 -0700</pubDate><guid>/beginner/060_helm/</guid><description>Helm This tutorial has been updated for Helm v3. In version 3, the Tiller component was removed, which simplified operations and improved security.
Helm is a package manager for Kubernetes that packages multiple Kubernetes resources into a single logical deployment unit called a Chart. Charts are easy to create, version, share, and publish.
In this chapter, we&amp;rsquo;ll cover installing Helm. Once installed, we&amp;rsquo;ll demonstrate how Helm can be used to deploy a simple nginx webserver, and a more sophisticated microservice.</description></item><item><title>Exposing a Service</title><link>/beginner/130_exposing-service/</link><pubDate>Tue, 09 Apr 2019 00:00:00 -0300</pubDate><guid>/beginner/130_exposing-service/</guid><description>Exposing a Service Introduction In this Chapter, we will review how to configure a Service, Deployment or Pod to be exposed outside our cluster. We will also review the different ways to do so.</description></item><item><title>Assigning Pods to Nodes</title><link>/beginner/140_assigning_pods/</link><pubDate>Tue, 09 Apr 2019 00:00:00 -0300</pubDate><guid>/beginner/140_assigning_pods/</guid><description>Assigning Pods to Nodes Introduction In this Chapter, we will review how the strategy of assigning Pods works, alternatives and recommended approaches.
You can constrain a pod to only be able to run on particular nodes or to prefer to run on particular nodes.
Generally such constraints are unnecessary, as the scheduler will automatically do a reasonable placement (e.g. spread your pods across nodes, not place the pod on a node with insufficient free resources, etc.</description></item></channel></rss>