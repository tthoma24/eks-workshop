<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>monitoring on Amazon EKS Workshop</title><link>/tags/monitoring/</link><description>Recent content in monitoring on Amazon EKS Workshop</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 14 Oct 2018 09:27:46 -0400</lastBuildDate><atom:link href="/tags/monitoring/index.xml" rel="self" type="application/rss+xml"/><item><title>Monitoring using Prometheus and Grafana</title><link>/intermediate/240_monitoring/</link><pubDate>Sun, 14 Oct 2018 09:27:46 -0400</pubDate><guid>/intermediate/240_monitoring/</guid><description>Monitoring using Prometheus and Grafana In this Chapter, we will deploy Prometheus and Grafana to monitor Kubernetes cluster</description></item><item><title>Tracing with X-Ray</title><link>/intermediate/245_x-ray/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/intermediate/245_x-ray/</guid><description>Tracing with X-Ray As distributed systems evolve, monitoring and debugging services becomes challenging. Container-orchestration platforms like Kubernetes solve a lot of problems, but they also introduce new challenges for developers and operators in understanding how services interact and where latency exists. AWS X-Ray helps developers analyze and debug distributed services.
In this module, we are going to deploy the X-Ray agent as a DaemonSet, deploy sample front-end and back-end services that are instrumented with the X-Ray SDK, make some sample requests and then examine the traces and service maps in the AWS Management Console.</description></item><item><title>EKS CloudWatch Container Insights</title><link>/intermediate/250_cloudwatch_container_insights/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/intermediate/250_cloudwatch_container_insights/</guid><description>In this chapter we will learn and leverage the new CloudWatch Container Insights to see how you can use native CloudWatch features to monitor your EKS Cluster performance.
You can use CloudWatch Container Insights to collect, aggregate, and summarize metrics and logs from your containerized applications and microservices. Container Insights is available for Amazon Elastic Container Service, Amazon Elastic Kubernetes Service, and Kubernetes platforms on Amazon EC2. The metrics include utilization for resources such as CPU, memory, disk, and network.</description></item></channel></rss>